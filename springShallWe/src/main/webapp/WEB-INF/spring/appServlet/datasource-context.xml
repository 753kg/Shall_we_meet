<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DB -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> <!-- 환경설정했던 정보를 읽는다 --> 
		<property name="locations">
			<list>
				<value>classpath:/oracledb.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- Mybatis connection pool -->
	<bean id="dataSource" class="org.apache.ibatis.datasource.pooled.PooledDataSource">
		<property name="driver" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<!-- MyBatis -->
	<!-- sqlSessionFactory : sqlSession을 만들어 주는 역할 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:mybatis/sqlConfig.xml" />
		<property name="mapperLocations" value="classpath:mybatis/mappers/*Mapper.xml" />
	</bean>
	
	<!-- sqlSession : sql문장 실행 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
	<!-- Transaction bean 생성 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- Transaction 관련 annotation 찾아줌 -->
	<!-- proxy-target-class="true" : 인터페이스 없이 class에 직접 적용되는 proxy -->
	<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager"/>
	
</beans>
